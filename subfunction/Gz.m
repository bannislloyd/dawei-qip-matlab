function a=Gz(rou)

 v=length(rou);    %输入矩阵阶数
 
if (v-2^round(log2(v)))==0  %首先判断是不是密度矩阵
   
   N = log2(v);             %qubit的数目
   for m = 0:(v-1)          %循环从零开始，因为第一行第一列的态是 000..000，即十进制0所对应的二进制数
         
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         %这个循环计算第m行所对应的态
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
       
         for ii = 1:N   
             a(ii) = 0;
         end
         ii = 1;
         jj = m;
         while (jj~=0)
             a(ii) = mod(jj,2);
             jj = (jj-a(ii))/2; 
             ii = ii+1;
         end
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
   
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         %这个循环计算第n列所对应的态
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         for n = 0:(v-1)
             
             for ii = 1:N
             b(ii) = 0;
             end
             ii = 1;
             jj = n;
             while (jj~=0)
             b(ii) = mod(jj,2);
             jj = (jj-b(ii))/2; 
             ii = ii+1;
             end
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
             
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         %这个循环计算相干阶，确定Gz所要保留的项
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
             decoherence = 0;
             for ii = 1:N
                 decoherence = decoherence+a(ii)-b(ii);
             end

             if mod(decoherence,4)==0
                 
             else rou(m+1,n+1)=0;
             end
         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 


         end
   end
   
a = rou;   %返回值
   

else fprintf('Error:This matrix is not a density matrix!!! \n')
end
 
         
             
   
   
 
 
 